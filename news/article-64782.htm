<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpntiktok.github.io/news/article-64782.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题</title>
        <meta name="description" content="团队日常协作中，自然而然的会出现很多重复代码，根据这些代码的种类，之前可能会以以下方式处理    方式 描述 应用时可能产生的问题     硬编码 多数新手，或逐渐腐坏的项目会这么干，会直接复制之前实" />
        <link rel="icon" href="/assets/website/img/singboxwindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="VPN Tiktok 机场订阅节点中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpntiktok.github.io/news/article-64782.htm" />
    <meta property="og:site_name" content="VPN Tiktok 机场订阅节点中文网" />
    <meta property="og:title" content="使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题" />
    <meta property="og:image" content="https://vpntiktok.github.io/uploads/20240731/7c66a0be20a3eaf0ff726844be28915c.webp" />
        <meta property="og:release_date" content="2025-02-28T06:57:06" />
    <meta property="og:updated_time" content="2025-02-28T06:57:06" />
        <meta property="og:description" content="团队日常协作中，自然而然的会出现很多重复代码，根据这些代码的种类，之前可能会以以下方式处理    方式 描述 应用时可能产生的问题     硬编码 多数新手，或逐渐腐坏的项目会这么干，会直接复制之前实" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link rel="stylesheet" href="/assets/website/css/singboxwindows/app.css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:300,400,500,600,700,800,900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.icons8.com/fonts/line-awesome/1.1/css/line-awesome-font-awesome.min.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WMKTGTP287"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WMKTGTP287');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg fixed-top py-3 navbar-light" id="mainNav">
        <div class="container"> 
            <a class="navbar-brand" href="/">
                        <span>VPN Tiktok</span>
                        </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"> <a class="nav-link" href="/">首页</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/free-nodes/">免费节点</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/paid-subscribe/">推荐机场</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/news/">新闻资讯</a> </li>
                                        <li class="nav-item"> <a class="nav-link" href="/client.htm">客户端</a> </li>
                                    </ul>
            </div>
        </div>
    </nav>
    <main role="main">
        <div class="contact_header jumbotron text-center">
            <h1 class="display-4">使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题</h1>
            <p>
                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
            </p>
        </div>
        <section class="bg-image-2 position-relative"> <img src="/assets/website/img/singboxwindows/mix-icons.png" alt="" class="bg-img-2">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				</h1> <p>团队日常协作中，自然而然的会出现很多重复代码，根据这些代码的种类，之前可能会以以下方式处理</p> <table> <thead> <tr> <th style="text-align: left">方式</th> <th style="text-align: left">描述</th> <th style="text-align: left">应用时可能产生的问题</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">硬编码</td> <td style="text-align: left">多数新手，或逐渐腐坏的项目会这么干，会直接复制之前实现的代码</td> <td style="text-align: left">带来的问题显而易见的多，例如架构会逐渐随时间被侵蚀，例外越来越多</td> </tr> <tr> <td style="text-align: left">提取函数</td> <td style="text-align: left">提取成为函数，然后复用</td> <td style="text-align: left">提取函数，然后复用，会比直接硬编码好些，但是仍然存在大量因“例外”而导致增加参数、增加函数重载的情况</td> </tr> <tr> <td style="text-align: left">模板生成器</td> <td style="text-align: left">CodeSmith/T4等</td> <td style="text-align: left">因为是独立进程，所以对于读取用户代码或项目，实现难度较高，且需要现有用户项目先生成成功，再进行生成 ，或者是完全基于新项目</td> </tr> <tr> <td style="text-align: left">代码片段</td> <td style="text-align: left">VS自带的代码片段功能</td> <td style="text-align: left">无法对复杂的环境或条件做出响应</td> </tr> <tr> <td style="text-align: left">AOP框架</td> <td style="text-align: left">面向切面编程，可以解决很多于用户代码前后增加操作的事情</td> <td style="text-align: left">但是大多AOP框架都是基于透明代理形式实现的，对于相互调用较多的代码，但形成性能压力，而且因为要符合透明代理的规则，所以要提供相应的子类或接口。</td> </tr> </tbody> </table> </h1> <p>但以上这几种，AOP算是最理想的方式，但是感觉上还可以有更好的解决方案。</p> <p>直到读到了这篇文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">Introducing C# Source Generators</a>，文中提供了一种新的解决方案，即通过<code>Roslyn</code>的<code>Source Generator</code>在编译时直接读取当前项目中的语法树，处理并生成的新代码，然后在编译时也使用这些新代码。</p> <p>那么如果可以读取现有代码的语法树，通过读取代码中的标记，那么在代码生成过程中是否就能直接生成。<br /> 实现如下效果：<br /><strong>项目中的源代码<code>Program.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         return a + b;     } }</code></pre> <p><strong>自动根据<code>LogAttribute</code> 自动编译成的代码<code>Program.g.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         Console.WriteLine("Program.Add(int, int) 开始运行.");         int result;         result = a + b;         Console.WriteLine("Program.Add(int, int) 结束运行.");         return result;     } }</code></pre> <p>当然<code>LogAttribute</code>中需要去实现插入代码。<br /> 然后项目自动使用新生成的<code>Program.g.cs</code>进行编译。这样就实现了基于编译时的AOP。</p> <p>即实现以下流程<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b60d3f4115a4368be8e27fe0c26fc6cd.jpg" alt="使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题"></p> </h1> <p>经过寻找，发现其实已经有框架可以实现我上面说的流程了，也就是在编译时实现代码的插入。<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a> 。</p> <p>下面作一个简单示例</p> <ol> <li>创建一个.NET6.0的控制台应用，我这里命名为<code>LogDemo</code>,<br /> 其中的入口文件<code>Program.cs</code></li> </ol> <pre><code class="language-C#">namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 这里写一个简单的方法，一会对这个方法进行代码的插入         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     } }</code></pre> <ol start="2"> <li>在项目中使用<strong>Metalama</strong></li> </ol> <p>通过引用包<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/packages/Metalama.Framework"  target="_blank" rel="nofollow">https://www.nuget.org/packages/Metalama.Framework</a>, 注意Metalama当前是Preview版本，如果通过可视化Nuget管理器引入，需要注意勾选<strong>包含预发行版</strong></p> <pre><code class="language-ps">dotnet add package Metalama.Framework --version 0.5.7-preview</code></pre> <ol start="3"> <li>编写一个AOP的Attribute</li> </ol> <p>在项目中引入<code>Metalama.Framework</code>后无需多余配置或代码，直接编写一个AOP的<code>Attribute</code></p> <pre><code class="language-C#">using Metalama.Framework.Aspects;  namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     }     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod()         {             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 开始运行.");             var result = meta.Proceed();             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 结束运行.");             return result;          }     } }</code></pre> <ol start="4"> <li>执行结果如下</li> </ol> <pre><code>Program.Add(int, int) 开始运行. Add3 Program.Add(int, int) 结束运行. 3</code></pre> <ol start="5"> <li>生成的程序集进行反编译，得到的代码如下：</li> </ol> <pre><code class="language-C#">using Metalama.Framework.Aspects; namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             Console.WriteLine("Program.Add(int, int) 开始运行.");             int result_1;             var result = a + b;             Console.WriteLine("Add" + result);             result_1 = result;             Console.WriteLine("Program.Add(int, int) 结束运行.");             return result_1;         }     } #pragma warning disable CS0067     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod() =&gt;          throw new System.NotSupportedException("Compile-time-only code cannot be called at run-time.");     } #pragma warning restore CS0067 }</code></pre> </h1> <p>这样就完全实现了我之前想要的效果，当然使用<code>Metalama</code>还可以实现很多能极大地提高生产力的功能，它不仅可以对方法进行改写，也可以对属性、字段、事件、甚至是类、命名空间进行一些操作 。</p> </h1> <p>Introducing C# Source Generators：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/</a><br /> Metalama官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-64172.htm">青岛市动物疾病控制中心（青岛市动物疾病控制中心官网）</a></p>
                                        <p>下一个：<a href="/news/article-64784.htm">动物疫苗多少钱一支啊图片及价格查询表（动物疫苗法最新消息2019）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-25-clash-v2ray-ss-ssr.htm" title="VPN Tiktok | 2月25日22M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点订阅分享">VPN Tiktok | 2月25日22M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-62955.htm" title="springboot整合log4j的踩坑实战记录_java">springboot整合log4j的踩坑实战记录_java</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-15-node-share.htm" title="VPN Tiktok | 2月15日18.3M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点订阅分享">VPN Tiktok | 2月15日18.3M/S|免费VPN/V2ray/Clash/SSR/Shadowrocket免费节点订阅分享</a></li>
                        <li class="py-2"><a href="/news/article-62956.htm" title="动物诊疗有限公司 动物诊疗有限公司和动物诊所区别">动物诊疗有限公司 动物诊疗有限公司和动物诊所区别</a></li>
                        <li class="py-2"><a href="/news/article-60595.htm" title="免费领养宠物的应用软件（免费领养宠物的平台有哪些）">免费领养宠物的应用软件（免费领养宠物的平台有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-59454.htm" title="做宠物零食 做宠物零食需要什么手续">做宠物零食 做宠物零食需要什么手续</a></li>
                        <li class="py-2"><a href="/news/article-58299.htm" title="VS2017的C++开发心得（一）VS的项目创建">VS2017的C++开发心得（一）VS的项目创建</a></li>
                        <li class="py-2"><a href="/news/article-60020.htm" title="沧州卖宠物的地方（沧州哪里有宠物店）">沧州卖宠物的地方（沧州哪里有宠物店）</a></li>
                        <li class="py-2"><a href="/news/article-57249.htm" title="动物医院需要几个兽医资格证才能进行诊断鉴定（动物医院资质）">动物医院需要几个兽医资格证才能进行诊断鉴定（动物医院资质）</a></li>
                        <li class="py-2"><a href="/news/article-57248.htm" title="flex卡片布局（随屏幕自适应）">flex卡片布局（随屏幕自适应）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">43</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="pt-4 pb-5 bg-light position-relative">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 mt-4">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">VPN Tiktok 机场订阅节点中文网</a> 版权所有 Powered by WordPress
                    </div>
                </div>
                <!--/.row-->
            </div>
            <!--/.container-->
        </footer>
        <script src="/assets/website/js/frontend/singboxwindows/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
        <script src="/assets/website/js/frontend/singboxwindows/app.js"></script>
        <script src="/assets/website/js/frontend/G.js"></script>
    </main>
</body>

</html>